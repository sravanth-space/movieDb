{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.ts","components/Header/index.tsx","config.ts","components/HeroImage/HomeImage.styles.ts","components/HeroImage/index.tsx","components/Grid/Grid.styles.ts","components/Grid/index.tsx","components/Thumb/Thumb.styles.ts","components/Thumb/index.tsx","components/Spinner/index.tsx","components/Spinner/Spinner.styles.ts","images/search-icon.svg","components/SearchBar/SearchBar.styles.ts","components/SearchBar/index.tsx","components/Button/Button.styles.ts","components/Button/index.tsx","API.ts","helpers.ts","hooks/useHomeFetch.ts","images/no_image.jpg","components/Home.tsx","components/BreadCrumb/BreadCrumb.style.ts","components/BreadCrumb/index.tsx","components/MovieInfo/MovieInfo.styles.ts","components/MovieInfo/index.tsx","components/MovieInfoBar/MovieInfoBar.styles.ts","components/MovieInfoBar/index.tsx","components/Actor/Actor.styles.ts","components/Actor/index.tsx","components/Movie.tsx","hooks/useMovieFetch.ts","components/NotFound.tsx","GlobalStyle.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","REACT_APP_API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","isLoading","setIsLoading","isError","setIsError","isLoadingMore","setIsLoadingMore","API","movies","console","log","prev","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","loading","setLoading","error","setError","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2341eb28.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  padding: 20px 0;\n  margin: 0 auto;\n`;\n\nexport const LogoImg = styled.img`\n  width: 200px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n  }\n`;\n\nexport const TMDBLogoImg = styled.img`\n  width: 100px;\n\n  @media screen and (max-width: 500px) {\n    width: 80px;\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport RMDBLogo from '../../images/react-movie-logo.svg';\nimport TMDBLogo from '../../images/tmdb_logo.svg';\n\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from './Header.styles';\n\nconst Header: React.FC = () => {\n  return (\n    <Wrapper>\n      <Content>\n        <Link to='/'>\n          <LogoImg src={RMDBLogo} alt='rmdb-logo' />\n        </Link>\n        <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo' />\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default Header;\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL: string = 'https://api.themoviedb.org/3/';\nconst API_KEY: string | undefined = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL: string = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL: string = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL: string = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL: string = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL: string = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL: string = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE: string = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE: string = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from 'styled-components';\n// Types\ntype Props = {\n  image: string,\n}\n\nexport const Wrapper = styled.div<Props>`\n  background: linear-gradient(\n    to bottom, rgba(0, 0, 0, 0) 41%,\n    rgba(0, 0, 0, 0.65) 100%\n  ),\n    url(${({ image }) => image }), var(--darkGrey);\n  background-size: 100%, cover;\n  background-position: center;\n  height: 600px;\n  position: relative;\n  animation: animateHeroImage 1s;\n\n  @keyframes animateHeroImage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 20px;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n  z-index: 100;\n  max-width: 700px;\n  position: absolute;\n  bottom: 40px;\n  margin-right: 20px;\n  min-height: 100px;\n  color: var(--white);\n\n  h1 {\n    font-size: var(--fontSuperBig);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontBig);\n    }\n  }\n\n  p {\n    font-size: var(--fontMed);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontSmall);\n    }\n  }\n\n  @media screen and (max-width: 720px) {\n    max-width: 100%;\n  }\n`;\n","import React from 'react';\n//styles\nimport { Wrapper, Content, Text } from './HomeImage.styles';\n//Types\ntype Props = {\n  image: string,\n  title: string,\n  text: string,\n}\n// вместо обращения к ключам пропса, лучше использовать деструктуризацию и сразу передавать\n// нужные ключи. Так гораздо читабельнее и это ES6 синтакс\nconst HeroImage: React.FC<Props> = ({ image, title, text }) => {\n  return (\n    <Wrapper image={image}>\n      <Content>\n        <Text>\n          <h1>{title}</h1>\n          <p>{text}</p>\n        </Text>\n      </Content>\n    </Wrapper>\n  )\n};\n\nexport default HeroImage;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  padding: 0 20px;\n\n  h1 {\n    color: var(--medGrey);\n\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 2rem;\n`;\n","import React from 'react';\n//styles\nimport { Wrapper, Content } from './Grid.styles';\n// Types\ntype Props = {\n  header: string,\n}\n\nconst Grid: React.FC<Props> = ({ header, children }) => {\n\n\n  return (\n    <>\n      <Wrapper>\n        <h1>{header}</h1>\n        <Content>{children}</Content>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Grid;\n","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n  width: 100%;\n  max-width: 720px;\n  transition: all 0.3s;\n  object-fit: cover;\n  border-radius: 20px;\n  animation: animateThumb 0.5s;\n\n  :hover {\n    opacity: 0.8;\n  }\n\n  @keyframes animateThumb {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n//styles\nimport { Image } from './Thumb.styles';\n//Types\ntype Props = {\n  image: string,\n  movieId?: number,\n  clickable: boolean,\n}\n\nconst Thumb: React.FC<Props> = ({ image, movieId, clickable }) => {\n  return (\n    <div>\n      {clickable ? (\n        <Link to={`/${movieId}`}>\n          <Image src={image} alt='movie-thumb'/>\n        </Link>\n      ) : (\n        <Image src={image} alt='movie-thumb'/>\n      )}\n    </div>\n  );\n};\n\nexport default Thumb;\n","import { Spinner } from './Spinner.styles';\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const Spinner = styled.div`\n  border: 5px solid var(--lightGrey);\n  border-top: 5px solid var(--medGrey);\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  max-width: var(--maxWidth);\n  width: 100%;\n  height: 55px;\n  background: var(--medGrey);\n  margin: 0 auto;\n  border-radius: 40px;\n  color: var(--white);\n\n  img {\n    position: absolute;\n    left: 15px;\n    top: 14px;\n    width: 30px;\n  }\n\n  input {\n    font-size: var(--fontBig);\n    position: absolute;\n    left: 0;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: var(--white);\n\n    :focus {\n      outline: none;\n    }\n  }\n`;\n","import React, { useState, useEffect, useRef } from 'react';\n//Image\nimport searchIcon from '../../images/search-icon.svg';\n//styles\nimport { Wrapper, Content } from './SearchBar.styles';\n//Types\ntype Props = {\n  setSearchTerm: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst SearchBar: React.FC<Props> = ({ setSearchTerm }) => {\n  const [ state, setState ] = useState('');\n  const initial = useRef(true);\n\n  useEffect(() => {\n    if (initial.current) {\n      initial.current = false;\n      return;\n    };\n\n    const timer = setTimeout(() => {\n      setSearchTerm(state);\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, [setSearchTerm, state]);\n\n  return (\n    <>\n      <Wrapper>\n        <Content>\n          <img src={searchIcon} alt='search-icon'/>\n          <input\n            type='text'\n            placeholder='Search Movie'\n            onChange={event => setState(event.currentTarget.value)}\n            value={state}\n          />\n        </Content>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.button`\n  display: block;\n  background: var(--darkGrey);\n  width: 25%;\n  min-width: 200px;\n  height: 60px;\n  border-radius: 30px;\n  color: var(--white);\n  border: 0;\n  font-size: var(--fontBig);\n  margin: 20px auto;\n  transition: all 0.3s;\n  outline: none;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\n//styles\nimport { Wrapper } from './Button.styles';\n//Types\ntype Props = {\n  text: string,\n  callback: () => void,\n}\n\nconst Button: React.FC<Props> = ({ text, callback }) => {\n  return (\n    <>\n      <Wrapper type='button' onClick={callback}>\n        {text}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Button;\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\n// Types\nexport type Movie = {\n  backdrop_path: string,\n  id: number,\n  original_title: string,\n  overview: string,\n  popularity: number,\n  poster_path: string,\n  title: string,\n  vote_average: number,\n  budget: number,\n  runtime: number,\n  revenue: number,\n}\n\nexport type Movies = {\n  page: number,\n  results: Movie[],\n  total_pages: number,\n  total_results: number,\n}\n\nexport type Cast = {\n  // [property: string]: string,\n\n  character: string,\n  credit_id: string,\n  name: string,\n  profile_path: string,\n}\n\nexport type Crew = {\n  job: string,\n  name: string,\n  credit_id: number,\n}\n\nexport type Credits = {\n  id: number,\n  cast: Cast[],\n  crew: Crew[],\n}\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm: string, page: number): Promise<Movies> => {\n    const endpoint: string = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async (movieId: string): Promise<Movie> => {\n    const endpoint: string = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async (movieId: string): Promise<Credits> => {\n    const creditsEndpoint: string = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (\n      requestToken: string,\n      username: string,\n      password: string\n    ) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  //@ts-ignore\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = (time: number): string => {\n  const hours: number = Math.floor(time / 60);\n  const mins: number = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = (money: number): string => {\n  const formatter: Intl.NumberFormat = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = (stateName: string): any => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n};\n","import { useState, useEffect } from \"react\";\n//API\nimport API, { Movie } from '../API';\n//helpers\nimport { isPersistedState } from \"../helpers\";\n\nconst initialState = {\n  page: 0,\n  results: [] as Movie[],\n  total_pages: 0,\n  total_results: 0,\n};\n\nexport const useHomeFetch = () => {\n  const [ searchTerm, setSearchTerm ] = useState('');\n  const [ state, setState ] = useState(initialState);\n  const [ isLoading, setIsLoading ] = useState(false);\n  const [ isError, setIsError ] = useState(false);\n  const [ isLoadingMore, setIsLoadingMore ] = useState(false);\n\n  const fetchMovies = async (page: number, searchTerm = '') => {\n    try {\n      setIsError(false);\n      setIsLoading(true);\n\n      const movies = await API.fetchMovies(searchTerm, page);\n      console.log(movies);\n\n      setState(prev => ({\n        ...movies,\n        results:\n          page > 1 ? [ ...prev.results, ...movies.results ] : [ ...movies.results ]\n      }));\n\n    } catch (error) {\n      setIsError(true);\n    };\n    setIsLoading(false);\n  };\n\n  // initial and search\n  useEffect(() => {\n    if (!searchTerm) {\n      const sessionState = isPersistedState('homeState');\n\n      if (sessionState) {\n        setState(sessionState);\n        return;\n      };\n    };\n\n    setState(initialState);\n    fetchMovies(1, searchTerm);\n  }, [searchTerm]);\n\n  // Load more\n  useEffect(() => {\n    if (!isLoadingMore) return;\n\n    fetchMovies(state.page + 1, searchTerm);\n    setIsLoadingMore(false);\n  }, [isLoadingMore, searchTerm, state.page]);\n\n  //write to sessionStorage\n  useEffect(() => {\n    if (!searchTerm) sessionStorage.setItem('homeState', JSON.stringify(state));\n  }, [searchTerm, state])\n\n  return {\n    state,\n    isLoading,\n    isError,\n    searchTerm,\n    setSearchTerm,\n    setIsLoadingMore\n  }; // es6 syntax\n};\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from 'react';\n//config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config';\n//components\nimport HeroImage from './HeroImage';\nimport Grid from './Grid';\nimport Thumb from './Thumb';\nimport Spinner from './Spinner';\nimport SearchBar from './SearchBar';\nimport Button from './Button';\n//hook\nimport { useHomeFetch } from '../hooks/useHomeFetch';\n//image\nimport NoImage from '../images/no_image.jpg';\n\nconst Home: React.FC = () => {\n  const {\n    state,\n    isLoading,\n    isError,\n    searchTerm,\n    setSearchTerm,\n    setIsLoadingMore\n  } = useHomeFetch();\n\n  console.log(state);\n\n  if (isError) return <div>Something went wrong ...</div>;\n\n  return (\n    <>\n      {!searchTerm && state.results[0] ?\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n          title={state.results[0].original_title}\n          text={state.results[0].overview}\n        />\n      :\n        null\n      }\n      <SearchBar setSearchTerm={setSearchTerm} />\n      <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\n        {state.results.map(movie => (\n          <Thumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path ?\n                IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n              :\n                NoImage\n            }\n            movieId={movie.id}\n          />\n        ))}\n      </Grid>\n      {isLoading && <Spinner/>}\n      {state.page < state.total_pages && !isLoading && (\n        <Button text='Load More' callback={() => setIsLoadingMore(true)}/>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 70px;\n  background: var(--medGrey);\n  color: var(--white);\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: var(--maxWidth);\n  padding: 0 20px;\n\n  span {\n    font-size: var(--fontMed);\n    color: var(--white);\n    padding-right: 10px;\n\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontSmall);\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n//style\nimport { Wrapper, Content } from './BreadCrumb.style';\n// Types\ntype Props = {\n  movieTitle: string,\n}\n\nconst BreadCrumb: React.FC<Props> = ({ movieTitle }) => (\n  <Wrapper>\n    <Content>\n      <Link to='/'>\n        <span>Home</span>\n      </Link>\n      <span>|</span>\n      <span>{movieTitle}</span>\n    </Content>\n  </Wrapper>\n);\n\nexport default BreadCrumb;\n","import styled from \"styled-components\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\n// Types\ntype Props = {\n  backdrop: string,\n}\n\nexport const Wrapper = styled.div<Props>`\n  background: ${({ backdrop }) =>\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : '#000'\n  };\n  background-size: cover;\n  background-position: center;\n  padding: 40px 20px;\n  animation: animateMovieInfo 1s;\n\n  @keyframes animatedMovieInfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  background: rgba(0, 0, 0, 0.7);\n  border-radius: 20px;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    max-height: none;\n  }\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  padding: 20px 40px;\n  color: var(--white);\n  overflow: hidden;\n\n  .rating-directors {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 50%;\n    margin: 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  h1 {\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n","import React from 'react';\n//components\nimport Thumb from '../Thumb';\n//config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\n//image\nimport NoImage from '../../images/no_image.jpg';\n//styles\nimport { Wrapper, Content, Text } from './MovieInfo.styles';\n// Types\nimport { MovieState } from '../../hooks/useMovieFetch';\n\ntype Props = {\n  movie: MovieState,\n}\n\nconst MovieInfo: React.FC<Props> = ({ movie }) => (\n  <Wrapper backdrop={movie.backdrop_path}>\n    <Content>\n      <Thumb\n        image={\n          movie.poster_path\n          ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n          : NoImage\n        }\n        clickable={false}\n       // alt='movie-thumb'\n      />\n      <Text>\n        <h1>{movie.title}</h1>\n        <h3>PLOT</h3>\n        <p>{movie.overview}</p>\n\n        <div className='rating-directors'>\n          <div>\n            <h3>RATING</h3>\n            <div className='score'>{movie.vote_average}</div>\n          </div>\n          <div className='director'>\n            <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n            {movie.directors.map(director => (\n              <p key={director.credit_id}>{director.name}</p>\n            ))}\n          </div>\n        </div>\n\n      </Text>\n    </Content>\n  </Wrapper>\n);\n\nexport default MovieInfo;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  width: 100%;\n  margin: 0 auto;\n\n  .column {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--medGrey);\n    border-radius: 20px;\n    margin: 0 20px;\n    flex: 1;\n\n    :first-child {\n      margin-left: 0;\n    }\n\n    :last-child {\n      margin-right: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    display: block;\n\n    .column {\n      margin: 20px 0;\n    }\n  }\n\n`;\n","import React from 'react';\n//helpers\nimport { calcTime, convertMoney } from '../../helpers';\n//styles\nimport { Wrapper, Content } from './MovieInfoBar.styles';\n// Types\ntype Props = {\n  time: number,\n  budget: number,\n  revenue: number,\n}\n\nconst MovieInfoBar: React.FC<Props> = ({ time, budget, revenue }) => (\n  <Wrapper>\n    <Content>\n      <div className='column'>\n        <p>Running time: {calcTime(time)}</p>\n      </div>\n      <div className='column'>\n        <p>Budget: {convertMoney(budget)}</p>\n      </div>\n      <div className='column'>\n        <p>Revenue: {convertMoney(revenue)}</p>\n      </div>\n    </Content>\n  </Wrapper>\n);\n\nexport default MovieInfoBar;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  color: var(--white);\n  background: var(--darkGrey);\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  h3 {\n    margin: 10px 0 0 0;\n  }\n\n  p {\n    margin: 5px 0;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 15px;\n`;\n","import React from 'react';\n//styles\nimport { Wrapper, Image } from './Actor.styles';\n// Types\ntype Props = {\n  name: string,\n  character: string,\n  imageUrl: string,\n}\n\nconst Actor: React.FC<Props> = ({ name, character, imageUrl }) => (\n  <Wrapper>\n    <Image src={imageUrl} alt='actor-thumb' />\n    <h3>{name}</h3>\n    <p>{character}</p>\n  </Wrapper>\n);\n\nexport default Actor;\n","import React from 'react';\nimport { useParams } from 'react-router';\n//config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\n//components\nimport BreadCrumb from './BreadCrumb';\nimport Grid from './Grid';\nimport Spinner from './Spinner';\nimport MovieInfo from './MovieInfo';\nimport MovieInfoBar from './MovieInfoBar';\nimport Actor from './Actor';\n//hook\nimport { useMovieFetch } from '../hooks/useMovieFetch';\n//image\nimport NoImage from '../images/no_image.jpg';\n\nconst Movie: React.FC = () => {\n  const { movieId } = useParams();\n  const { state: movie, loading, error } = useMovieFetch(movieId!);\n\n  if (loading) return <Spinner/>;\n  if (error) return <div>Something went wrong ...</div>;\n\n  return (\n    <>\n      <BreadCrumb movieTitle={movie.original_title} />\n      <MovieInfo movie={movie} />\n      <MovieInfoBar\n        time={movie.runtime}\n        budget={movie.budget}\n        revenue={movie.revenue}\n      />\n      <Grid header='Actors'>\n        {movie.actors.map(actor => (\n          <Actor\n            key={actor.credit_id}\n            name={actor.name}\n            character={actor.character}\n            imageUrl={\n              actor.profile_path\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n              : NoImage\n            }\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Movie;\n","import { useState, useEffect } from \"react\";\nimport API, { Movie, Cast, Crew } from '../API';\n//helpers\nimport { isPersistedState } from \"../helpers\";\n//Types\nexport type MovieState = Movie & { actors: Cast[], directors: Crew[] };\n\nexport const useMovieFetch = (movieId: string) => {\n  const [ state, setState ] = useState<MovieState>({} as MovieState);\n  const [ loading, setLoading ] = useState(true);\n  const [ error, setError ] = useState(false);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n\n        const movie = await API.fetchMovie(movieId);\n        const credits = await API.fetchCredits(movieId);\n        // get directors only\n        const directors = credits.crew.filter(\n          member => member.job === 'Director'\n        );\n\n        setState({\n          ...movie,\n          actors: credits.cast,\n          directors // directors: directors\n        });\n\n        setLoading(false);\n\n      } catch (error) {\n        setError(true);\n      };\n    };\n\n    const sessionState = isPersistedState(movieId);\n\n    if (sessionState) {\n      setState(sessionState);\n      setLoading(false);\n      return;\n    }\n\n    fetchMovie();\n  }, [movieId]);\n\n  // write to sessionStorage\n  useEffect(() => {\n    sessionStorage.setItem(movieId, JSON.stringify(state));\n  }, [movieId, state]);\n\n  return { state, loading, error };\n};\n","import React from 'react';\n\nconst NotFound: React.FC = () => <div>NotFound</div>;\n\n\nexport default NotFound;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --maxWidth: 1280px;\n    --white: #fff;\n    --lightGrey: #eee;\n    --medGrey: #353535;\n    --darkGrey: #1c1c1c;\n    --fontSuperBig: 2.5rem;\n    --fontBig: 1.5rem;\n    --fontMed: 1.2rem;\n    --fontSmall: 1rem;\n  }\n\n  * {\n    box-sizing: border-box;\n    font-family: 'Abel', sans-serif;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n\n    h1 {\n      font-size: 2rem;\n      font-weight: 600;\n      color: var(--white);\n    }\n\n    h3 {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n\n    p {\n      font-size: 1rem;\n      color: var(--white);\n    }\n  }\n`;\n","import React from 'react';\n// Routing\n//@ts-ignore\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// Components\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\n\n// Styles\nimport { GlobalStyle } from './GlobalStyle';\n\nconst App: React.FC = () => (\n    <Router>\n      <Header/>\n      <Routes>\n        <Route path='/' element={<Home/>}/>\n        <Route path='/:movieId' element={<Movie/>}/>\n        <Route path='/*' element={<NotFound/>}/>\n      </Routes>\n      <GlobalStyle />\n    </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}